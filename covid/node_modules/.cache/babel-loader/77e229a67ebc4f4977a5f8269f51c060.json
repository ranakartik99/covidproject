{"ast":null,"code":"var _jsxFileName = \"D:\\\\covidproject\\\\covid\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport Table from \"./components/Table\";\nimport InfoBox from \"./components/InfoBox\";\nimport Leftpanel from \"./components/Leftpanel\";\nimport Population from \"./components/Population\";\nimport Statewise from \"./components/Statewise\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countries, setCountries] = useState([]);\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        setTableData(data);\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n  const [data, setData] = useState({});\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/states\").then(response => response.json()).then(data => {\n      console.log(data);\n      setData(data);\n    });\n  }, []);\n\n  const onCountryChange = async e => {\n    const countryCode = e.target.value;\n    const url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n      setData(data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftpanel\",\n        children: /*#__PURE__*/_jsxDEV(Leftpanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightpanel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country-style\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"app__header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"COVID-19 Tracker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              className: \"app__dropdown\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                variant: \"outlined\",\n                value: country,\n                onChange: onCountryChange,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"worldwide\",\n                  children: \"Worldwide\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: country.value,\n                  children: country.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-style\",\n          children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n            title: \"Confirmed\",\n            cases: countryInfo.cases\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n            title: \"Active\",\n            cases: countryInfo.active\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n            title: \"Recovered\",\n            cases: countryInfo.recovered\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n            title: \"Deaths\",\n            cases: countryInfo.deaths\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"population\",\n          children: [/*#__PURE__*/_jsxDEV(Population, {\n            title: \"Population\",\n            population: \"120\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Population, {\n            title: \"Cases per Million\",\n            population: countryInfo.casesPerOneMillion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Population, {\n            title: \"Active Ratio\",\n            population: countryInfo.activePerOneMillion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Population, {\n            title: \"Recovery Ratio\",\n            population: countryInfo.recoveredPerOneMillion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Population, {\n            title: \"Death Ratio\",\n            population: countryInfo.deathsPerOneMillion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statewise, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"nA9f3J8Cn2dN5OFQHQkqSXzhbd4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/covidproject/covid/src/App.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","Table","InfoBox","Leftpanel","Population","Statewise","BrowserRouter","Router","Switch","Route","Link","App","country","setCountry","countries","setCountries","countryInfo","setCountryInfo","tableData","setTableData","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","setData","console","log","onCountryChange","e","countryCode","target","url","cases","active","recovered","deaths","casesPerOneMillion","activePerOneMillion","recoveredPerOneMillion","deathsPerOneMillion"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport Table from \"./components/Table\";\nimport InfoBox from \"./components/InfoBox\";\nimport Leftpanel from \"./components/Leftpanel\";\nimport Population from \"./components/Population\";\nimport Statewise from \"./components/Statewise\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nfunction App() {\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countries, setCountries] = useState([]);\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          setTableData(data);\n          setCountries(countries);\n        });\n    };\n\n    getCountriesData();\n  }, []);\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/states\")\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setData(data);\n      });\n  }, []);\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n        setData(data);\n      });\n  };\n  return (\n    <>\n      {/* <Router>\n        <Switch>\n          <Link to=\"\">Home1</Link>\n          <Link to=\"/states\">States</Link>\n\n          <Route path=\"\" component={App} />\n          <Route path=\"/states\" component={Statewise} />\n        </Switch>\n      </Router> */}\n      <div className=\"app\">\n        <div className=\"leftpanel\">\n          <Leftpanel />\n        </div>\n        <div className=\"rightpanel\">\n          <div className=\"country-style\">\n            <div className=\"app__header\">\n              <h1>COVID-19 Tracker</h1>\n              <FormControl className=\"app__dropdown\">\n                <Select\n                  variant=\"outlined\"\n                  value={country}\n                  onChange={onCountryChange}\n                >\n                  <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n                  {countries.map((country) => (\n                    <MenuItem value={country.value}>{country.name}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </div>\n          </div>\n          <div className=\"card-style\">\n            <InfoBox title=\"Confirmed\" cases={countryInfo.cases} />\n            <InfoBox title=\"Active\" cases={countryInfo.active} />\n            <InfoBox title=\"Recovered\" cases={countryInfo.recovered} />\n            <InfoBox title=\"Deaths\" cases={countryInfo.deaths} />\n          </div>\n          {/* <Card>\n        <CardContent>\n          <Table countries={tableData} />\n        </CardContent>\n      </Card> */}\n          {/* to check the polation and otheer table */}\n          <div className=\"population\">\n            <Population title=\"Population\" population=\"120\" />\n            <Population\n              title=\"Cases per Million\"\n              population={countryInfo.casesPerOneMillion}\n            />\n            <Population\n              title=\"Active Ratio\"\n              population={countryInfo.activePerOneMillion}\n            />\n            <Population\n              title=\"Recovery Ratio\"\n              population={countryInfo.recoveredPerOneMillion}\n            />\n            <Population\n              title=\"Death Ratio\"\n              population={countryInfo.deathsPerOneMillion}\n            />\n          </div>\n        </div>\n        <Statewise />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}