{"ast":null,"code":"var _jsxFileName = \"D:\\\\covidproject\\\\covid\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport InfoBox from \"./components/InfoBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countries, setCountries] = useState([]);\n  const [countryInfo, setCountryInfo] = useState({});\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async e => {\n    const countryCode = e.target.value;\n    const url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country-style\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"COVID-19 Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app__dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            value: country,\n            onChange: onCountryChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"worldwide\",\n              children: \"Worldwide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-style\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n        title: \"Coronavirus Cases\",\n        cases: countryInfo.todayRecovered,\n        total: 4000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n        title: \"recovered\",\n        cases: countryInfo.recovered,\n        total: 4000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n        title: \"death Cases\",\n        cases: 124,\n        total: 4000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"i am la\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"nAn2ZGVrhM+7fK/t2PH+1TzkDeE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/covidproject/covid/src/App.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","InfoBox","App","country","setCountry","countries","setCountries","countryInfo","setCountryInfo","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","onCountryChange","e","countryCode","target","url","todayRecovered","recovered"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\n\nimport InfoBox from \"./components/InfoBox\";\n\nfunction App() {\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countries, setCountries] = useState([]);\n  const [countryInfo, setCountryInfo] = useState({});\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n\n          setCountries(countries);\n        });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n      });\n  };\n  return (\n    <>\n      <div className=\"country-style\">\n        <div className=\"app__header\">\n          <h1>COVID-19 Tracker</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n      </div>\n      <div className=\"card-style\">\n        <InfoBox\n          title=\"Coronavirus Cases\"\n          cases={countryInfo.todayRecovered}\n          total={4000}\n        />\n        <InfoBox title=\"recovered\" cases={countryInfo.recovered} total={4000} />\n        <InfoBox title=\"death Cases\" cases={124} total={4000} />\n      </div>\n\n      <Card>\n        <CardContent></CardContent>\n      </Card>\n      <h1>i am la</h1>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}